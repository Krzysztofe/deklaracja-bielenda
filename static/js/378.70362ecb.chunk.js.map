{"version":3,"file":"static/js/378.70362ecb.chunk.js","mappings":"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","sources":["pages/steps/BanksList.tsx","pages/steps/StepDateInfo.tsx","pages/steps/HttpRequestState.tsx","pages/steps/StepSummary.tsx","pages/steps/StepsButtons.tsx","data/dataURL.tsx","pages/steps/StepsHeader.tsx","pages/steps/FormHeader.tsx","pages/steps/stepForm/stepFormInputs/StepFormEployer.tsx","pages/steps/stepForm/stepFormInputs/StepFormTopInputs.tsx","pages/steps/stepForm/stepFormInputs/StepInputsWorkplace.tsx","pages/steps/stepForm/stepFormInputs/StepInputsConstract.tsx","pages/steps/stepForm/stepFormInputs/StepInputsWorktime.tsx","pages/steps/stepForm/stepFormInputs/StepInputsDepartment.tsx","pages/steps/stepForm/stepFormInputs/StepInputsMembership.tsx","pages/steps/stepForm/StepForm.tsx","pages/steps/stepClause/dataStepClause.tsx","pages/steps/stepClause/StepClause.tsx","pages/steps/useMultistepForm.tsx","pages/steps/IndexSteps.tsx"],"sourcesContent":["import Card from \"@mui/material/CardContent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\n\r\nconst ing = require(\"./../../images/ing.png\");\r\nconst millenium = require(\"./../../images/millennium.png\");\r\nconst santander = require(\"./../../images/santander.png\");\r\nconst alior = require(\"./../../images/alior.png\");\r\nconst credit = require(\"./../../images/credit-agricole.png\");\r\nconst mbank = require(\"./../../images/mbank.png\");\r\nconst pekao = require(\"./../../images/pekao.png\");\r\nconst pko = require(\"./../../images/pko-bank-polski.png\");\r\n\r\nconst BanksList = () => {\r\n  {\r\n    /* <ImageList sx={{ width: 500, height: 450 }} cols={3} rowHeight={164}>\r\n  {itemData.map(item => (\r\n    <ImageListItem key={item.img}>\r\n      <img\r\n        src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\r\n        srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\r\n        alt={item.title}\r\n        loading=\"lazy\"\r\n      />\r\n    </ImageListItem>\r\n  ))}\r\n</ImageList>; */\r\n  }\r\n\r\n  return (\r\n    <ImageList sx={{display:\"flex\", flexWrap:\"wrap\", maxWidth: 300}}>\r\n      {[\r\n        {\r\n          img: ing,\r\n          link: \"https://www.ing.pl/\",\r\n          alt: \"Ing\",\r\n        },\r\n        {\r\n          img: millenium,\r\n          link: \"https://www.bankmillennium.pl/\",\r\n          alt: \"Millenium\",\r\n        },\r\n        {\r\n          img: santander,\r\n          link: \"https://www.santander.pl/klient-indywidualny\",\r\n          alt: \"Santander\",\r\n        },\r\n        {\r\n          img: alior,\r\n          link: \"https://www.santander.pl/klient-indywidualny\",\r\n          alt: \"Alior\",\r\n        },\r\n        {\r\n          img: credit,\r\n          link: \"https://www.santander.pl/klient-indywidualny\",\r\n          alt: \"Credit\",\r\n        },\r\n        {\r\n          img: mbank,\r\n          link: \"https://www.santander.pl/klient-indywidualny\",\r\n          alt: \"Mbank\",\r\n        },\r\n        {\r\n          img: pekao,\r\n          link: \"https://www.santander.pl/klient-indywidualny\",\r\n          alt: \"Pekao\",\r\n        },\r\n        {\r\n          img: pko,\r\n          link: \"https://www.santander.pl/klient-indywidualny\",\r\n          alt: \"PKO\",\r\n        },\r\n      ].map(\r\n        ({ img, link, alt }: { img: string; link: string; alt: string }) => {\r\n          return (\r\n            <ImageListItem sx={{ border: \"1px solid black\", width: \"20%\" }}>\r\n              <Link\r\n                to={link}\r\n                style={{ textDecoration: \"none\", color: \"black\", display: \"flex\" }}\r\n              >\r\n                <img\r\n                  src={img}\r\n                  alt={alt}\r\n                  loading=\"lazy\"\r\n                  style={{ width: 50, marginInline: \"auto\" }}\r\n                />\r\n              </Link>\r\n            </ImageListItem>\r\n          );\r\n        }\r\n      )}\r\n    </ImageList>\r\n  );\r\n};\r\n\r\nexport default BanksList;\r\n","import Card from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BanksList from \"./BanksList\";\r\n\r\nconst StepDateInfo = () => {\r\n  return (\r\n    <Card>\r\n      <Typography variant=\"h6\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Deklaracja została złożona\r\n      </Typography>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        KONTAKT: tel.\r\n        <br /> 736-850-536 <br />\r\n        ipamazon@wp.pl <br />\r\n        www.ozzip.p\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Facebook: <br /> OZZ Inicjatywa Pracownicza Amazon <br /> INFORMACJA O\r\n        DACIE PRZYJĘCIA DO ZWIĄZKU\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ p: 1 }}>\r\n        Jeżeli nasza Komisja nie postanowi inaczej, datą przyjęcia Ciebie do\r\n        związku będzie: <br />\r\n        1) ostatni dzień miesiąca, w którym oświadczenie to zostało doręczone:{\" \"}\r\n        <br />\r\n        a) członkowi prezydium organizacji podstawowej Związku (również poprzed\r\n        odebranie ze skrzynki pocztowej na tablicy związkowej) <br /> b)\r\n        bezpośrednio osobie działającej z upoważnienia prezydium Komisji <br />\r\n        c) na ujawniony w KRS adres Związku (aktualnie: ul. Kościelna 4/1a,\r\n        60-538 Poznań)\r\n        <br /> 2) dzień, w którym po otrzymaniu tego oświadczenia prezydium\r\n        Komisji podjęło się Twojej obrony wobec podmiotu zatrudniającego (w tym\r\n        pracodawcy). <br />\r\n        Powyższe wynika z Uchwały nr 60/5/2018 Komisji Krajowej OZZIP z\r\n        28.10.2018 r\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        JEŚLI PODAŁAŚ/PODAŁEŚ E-MAIL, OTRZYMASZ DROGĄ E-MAIL POTWIERDZENIE\r\n        ZAPISANIA DO ZWIĄZKU ORAZ DODANIA DO LISTY DYSKUSYJNEJ.\r\n      </Typography>\r\n      <Typography variant=\"h6\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Wstąpienie do komisji zostanie zaakceptowane po wykonaniu przelewu\r\n        bankowego składki na konto....\r\n      </Typography>\r\n\r\n      <BanksList />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StepDateInfo;\r\n","import React from \"react\";\r\nimport useHttp from \"./stepForm/hooks/useHttp\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\n\r\nconst HttpRequestState = () => {\r\n\r\nconst { isLoading, error } = useContext(StepsContext);\r\n\r\n// console.log('',error)\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          zIndex: 2,\r\n        }}\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  } \r\n  else if (error) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          color: \"red\"\r\n        }}\r\n      >\r\n        {error}\r\n      </Box>\r\n    );\r\n  } else return <></>;\r\n};\r\n\r\nexport default HttpRequestState;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\nimport HttpRequestState from \"./HttpRequestState\";\r\nimport { v4 as UUID } from \"uuid\";\r\n\r\nconst StepSummary = () => {\r\n  const { formik, isLoading, error } = useContext(StepsContext);\r\n\r\n  const formikValues = Object.values(formik.values);\r\n\r\n  const dataSummary = [\r\n    \"Imię\",\r\n    \"Nazwisko\",\r\n    \"Adres\",\r\n    \"Telefon\",\r\n    \"E-mail\",\r\n    \"Pracodawca\",\r\n    \"Pracodawca\",\r\n    \"Miejsce Pracy\",\r\n    \"Miejsce Pracy\",\r\n    \"Umowa\",\r\n    \"Wymiar czasu pracy\",\r\n    \"Dział\",\r\n    \"Login\",\r\n    \"Przynależność do innych ziwązków\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <HttpRequestState />\r\n      {isLoading ? (\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"101%\",\r\n            bgcolor: \"white\",\r\n            opacity: \"0.8\",\r\n            zIndex: 1,\r\n          }}\r\n        ></Box>\r\n      ) : null}\r\n\r\n      <Box>\r\n        <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n          Podsumowanie\r\n        </Typography>\r\n\r\n        {dataSummary.map((text, idx) => {\r\n          return (\r\n            <div key={UUID()}>\r\n              {formikValues[idx] === \"\" ? null : (\r\n                <Typography variant=\"body1\" sx={{ p: 1 }}>\r\n                  <span>\r\n                    <strong>{text}: </strong>\r\n                    {formikValues[idx]}\r\n                  </span>\r\n                </Typography>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        <Typography variant=\"body1\" sx={{ p: 1 }}>\r\n          <span>\r\n            <strong>Klauzula: </strong> Wyrażam zgodę...\r\n          </span>\r\n        </Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepSummary;\r\n","import Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\nimport { URL } from \"../../data/dataURL\";\r\n\r\ninterface Props {\r\n  next: () => void;\r\n  back: () => void;\r\n  currentStepIdx: number;\r\n  steps: JSX.Element[];\r\n}\r\n\r\nconst StepsButtons = (props: Props) => {\r\n  const {\r\n    formik,\r\n    formikClause,\r\n    isSubmited,\r\n    isConfirmed,\r\n    sendRequest,\r\n  } = useContext(StepsContext);\r\n  const [responseStatus, setResponseStatus] = useState(false);\r\n\r\n  const isError = Object.values(formik.errors);\r\n  const isErrorInClause = Object.values(formikClause.errors);\r\n\r\n  useEffect(() => {\r\n    if (isSubmited && isError.length === 0) props.next();\r\n  }, [isSubmited]);\r\n\r\n  useEffect(() => {\r\n    if (isConfirmed && isErrorInClause.length === 0) props.next();\r\n  }, [isConfirmed]);\r\n\r\n  useEffect(() => {\r\n    if (responseStatus) props.next();\r\n  }, [responseStatus]);\r\n\r\n  const handlePOST = () => {\r\n    if (props.currentStepIdx === 2) {\r\n      sendRequest(\r\n        {\r\n          url: URL,\r\n          body: { member: formik.values },\r\n          method: \"POST\",\r\n        },\r\n        setResponseStatus\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      {props.currentStepIdx > 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => props.back()}\r\n          sx={{ width: \"35%\", p: \"0.3em\" }}\r\n        >\r\n          Wstecz\r\n        </Button>\r\n      )}\r\n\r\n      {props.currentStepIdx === 2 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            props.currentStepIdx < 2 && props.next();\r\n            handlePOST();\r\n          }}\r\n          sx={{\r\n            width: \"35%\",\r\n            p: \"0.3em\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n          type=\"button\"\r\n        >\r\n          {props.currentStepIdx < props.steps.length - 2 ? \"Dalej\" : \"Wyślij\"}\r\n        </Button>\r\n      )}\r\n\r\n      {props.currentStepIdx === 0 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            isSubmited && isError.length === 0 && props.next();\r\n          }}\r\n          sx={{\r\n            width: \"35%\",\r\n            p: \"0.3em\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n          type=\"submit\"\r\n        >\r\n          Zatwierdź\r\n        </Button>\r\n      )}\r\n\r\n      {props.currentStepIdx === 1 && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            isConfirmed && isErrorInClause.length === 0 && props.next();\r\n          }}\r\n          sx={{\r\n            width: \"35%\",\r\n            p: \"0.3em\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n          type=\"submit\"\r\n        >\r\n          Zatwierdź\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StepsButtons;\r\n","export const URL = \"https://mail-sender-production.up.railway.app/receive\";\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n  steps: JSX.Element[];\r\n  currentStepIdx: number;\r\n}\r\n\r\nconst StepsHeader = (props: Props) => {\r\n  return (\r\n    <header className=\"wrapper wrapper--formReactionHeader \">\r\n      <Typography>\r\n        Krok {props.currentStepIdx + 1}/{props.steps.length}\r\n      </Typography>\r\n     \r\n    </header>\r\n  );\r\n};\r\n\r\nexport default StepsHeader;\r\n","import Typography from \"@mui/material/Typography\";\r\n\r\nconst FormHeader = () => {\r\n  return (\r\n    <>\r\n      <Typography variant=\"h1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Deklaracja Przystąpienia Do OZZIP Amazon\r\n      </Typography>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        Wypełnij deklarację w 4 krokach\r\n      </Typography>\r\n\r\n      <Typography variant=\"body2\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        DEKLARACJA <br />\r\n        Ja, niżej podpisany/podpisana oświadczam, iż przystępuję do\r\n        Ogólnopolskiego Związku Zawodowego „Inicjatywa Pracownicza” z siedzibą w\r\n        Poznaniu (KRS nr 0000215247).\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormHeader;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepFormEployer = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  const handleEmployerChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ employer: \"\", employerOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"employerOther\", \"\");\r\n    }\r\n  };\r\n\r\n  const handleLoginChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ employer: \"\", employerOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"employer\", \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Pracodawca:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"employer\"\r\n        value={formik.values.employer}\r\n        onChange={handleEmployerChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"Amazon\", \"Adecco\", \"Randstad\"].map(employer => {\r\n          return (\r\n            <FormControlLabel\r\n              key={employer}\r\n              value={employer}\r\n              control={<Radio />}\r\n              label={employer}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n      <TextField\r\n        type={\"text\"}\r\n        name={\"employerOther\"}\r\n        label={\"Inny\"}\r\n        value={formik.values.employerOther}\r\n        onChange={handleLoginChange}\r\n        onBlur={formik.handleBlur}\r\n        size=\"small\"\r\n      /> \r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.employer || formik.touched.employerOther) &&\r\n          formik.errors.employer && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.employer}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepFormEployer;\r\n","import FormGroup from \"@mui/material/FormGroup\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\n\r\nconst StepFormTopInputs = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  const dataTextInputs = [\r\n    { label: \"Imię\", value: \"name\", type: \"text\" },\r\n    { label: \"Nazwisko\", value: \"surname\", type: \"text\" },\r\n    { label: \"Adres\", value: \"address\", type: \"text\" },\r\n    { label: \"Telefon\", value: \"phone\", type: \"tel\" },\r\n    { label: \"E-mail\", value: \"email\", type: \"email\" },\r\n  ];\r\n\r\n  console.log('eeer',formik.errors)\r\n\r\n\r\n  return (\r\n    <>\r\n      {dataTextInputs.map(({ label, value, type }) => {\r\n        return (\r\n          <FormGroup key={label}>\r\n            <TextField\r\n              key={label}\r\n              type={type}\r\n              id={value}\r\n              name={value}\r\n              label={label}\r\n              value={formik.values[value as keyof typeof formik.values]}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"small\"\r\n            />\r\n            <Typography variant=\"body1\">\r\n              {formik.touched[value as keyof typeof formik.touched] &&\r\n                formik.errors[value as keyof typeof formik.errors] && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {formik.errors[value as keyof typeof formik.errors]}\r\n                  </span>\r\n                )}\r\n            </Typography>\r\n          </FormGroup>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepFormTopInputs;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsWorkplace = () => {\r\n  const { formik } = useContext(StepsContext);\r\n  const handleEmployerChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ workplace: \"\", workplaceOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"workplaceOther\", \"\");\r\n    }\r\n  };\r\n\r\n  const handleEmployerOtherChange = async (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    formik.handleChange(event);\r\n    if (event.target.value !== \"\") {\r\n      formik.setErrors({ workplace: \"\", workplaceOther: \"\" });\r\n      await formik.validateForm();\r\n      formik.setFieldValue(\"workplace\", \"\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Miejsce Pracy:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"workplace\"\r\n        value={formik.values.workplace}\r\n        onChange={handleEmployerChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"poz1\", \"wro1\", \"wro2\", \"wro5\", \"lcj\", \"ktw1\", \"ktw3\", \"szzl\"].map(\r\n          workplace => {\r\n            return (\r\n              <FormControlLabel\r\n                key={workplace}\r\n                value={workplace}\r\n                control={<Radio />}\r\n                label={workplace}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </RadioGroup>\r\n      <TextField\r\n        type={\"text\"}\r\n        name={\"workplaceOther\"}\r\n        label={\"Inne\"}\r\n        value={formik.values.workplaceOther}\r\n        onChange={handleEmployerOtherChange}\r\n        onBlur={formik.handleBlur}\r\n        size=\"small\"\r\n      />\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.workplace || formik.touched.workplaceOther) &&\r\n          formik.errors.workplace && (\r\n            <span style={{ color: \"red\" }}>\r\n              {formik.errors.workplace}\r\n            </span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsWorkplace;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsConstract = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Umowa:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"contract\"\r\n        value={formik.values.contract}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\r\n          \"Na czas nieokreślony\",\r\n          \"Na czas określony\",\r\n          \"Okres próbny\",\r\n          \"Umowa zlecenie\",\r\n        ].map(contract => {\r\n          return (\r\n            <FormControlLabel\r\n              key={contract}\r\n              value={contract}\r\n              control={<Radio />}\r\n              label={contract}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.contract || formik.touched.contract) &&\r\n          formik.errors.contract && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.contract}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsConstract;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsWorktime = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Wymiar czasu pracy:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"worktime\"\r\n        value={formik.values.worktime}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"Cały etat\", \"Pół etatu\"].map(worktime => {\r\n          return (\r\n            <FormControlLabel\r\n              key={worktime}\r\n              value={worktime}\r\n              control={<Radio />}\r\n              label={worktime}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.worktime || formik.touched.worktime) &&\r\n          formik.errors.worktime && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.worktime}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsWorktime;\r\n","import FormGroup from \"@mui/material/FormGroup\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\n\r\nconst StepInputsDepartment = () => {\r\n  const { formik } = useContext(StepsContext);\r\n  return (\r\n    <>\r\n      {[\r\n        { label: \"Dział\", value: \"department\" },\r\n        { label: \"Login\", value: \"login\" },\r\n      ].map(({ label, value }) => {\r\n        return (\r\n          <FormGroup key={label}>\r\n            <TextField\r\n              type=\"text\"\r\n              id={value}\r\n              name={value}\r\n              label={label}\r\n              value={formik.values[value as keyof typeof formik.values]}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"small\"\r\n            />\r\n            <Typography variant=\"body1\">\r\n              {formik.touched[value as keyof typeof formik.touched] &&\r\n                formik.errors[value as keyof typeof formik.errors] && (\r\n                  <span style={{ color: \"red\" }}>\r\n                    {formik.errors[value as keyof typeof formik.errors]}\r\n                  </span>\r\n                )}\r\n            </Typography>\r\n          </FormGroup>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepInputsDepartment;\r\n","import { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../../context/ContextProv\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst StepInputsMembership = () => {\r\n  const { formik } = useContext(StepsContext);\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel\r\n        id=\"demo-row-radio-buttons-group-label\"\r\n        sx={{ p: 1, fontWeight: \"bold\" }}\r\n      >\r\n        Przynależność do innych związków:\r\n      </FormLabel>\r\n      <RadioGroup\r\n        row\r\n        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n        name=\"membership\"\r\n        value={formik.values.membership}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n      >\r\n        {[\"Nie należę\", \"Należę\", \"Nie należę nie chcę\"].map(membership => {\r\n          return (\r\n            <FormControlLabel\r\n              key={membership}\r\n              value={membership}\r\n              control={<Radio />}\r\n              label={membership}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n\r\n      <Typography variant=\"body1\">\r\n        {(formik.touched.membership || formik.touched.membership) &&\r\n          formik.errors.membership && (\r\n            <span style={{ color: \"red\" }}>{formik.errors.membership}</span>\r\n          )}\r\n      </Typography>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StepInputsMembership;\r\n","import FormHeader from \"../FormHeader\";\r\nimport StepFormEployer from \"./stepFormInputs/StepFormEployer\";\r\nimport StepFormTopInputs from \"./stepFormInputs/StepFormTopInputs\";\r\nimport StepInputsWorkplace from \"./stepFormInputs/StepInputsWorkplace\";\r\nimport StepInputsConstract from \"./stepFormInputs/StepInputsConstract\";\r\nimport StepInputsWorktime from \"./stepFormInputs/StepInputsWorktime\";\r\nimport StepInputsDepartment from \"./stepFormInputs/StepInputsDepartment\";\r\nimport StepInputsMembership from \"./stepFormInputs/StepInputsMembership\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nconst StepForm = () => {\r\n  return (\r\n    <Stack>\r\n      <FormHeader />\r\n      <StepFormTopInputs />\r\n      <StepFormEployer />\r\n      <StepInputsWorkplace />\r\n      <StepInputsConstract />\r\n      <StepInputsWorktime />\r\n      <StepInputsDepartment />\r\n      <StepInputsMembership />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default StepForm;\r\n","export const dataClauseParagraphs = [\r\n  \"Przetwarzanie danych osobowych odbywać się będzie w celu:\",\r\n  \" • wykonywania celów statutowych,\",\r\n  \" • realizowania wymagań wynikających z przepisów prawa, w szczególności zaś w Ustawie z dnia 23 maja 1991 r. o związkach zawodowych\",\r\n  \" • dołączenia członka/członkini do listy mailingowej lub innego  elektronicznego komunikatora umożliwiającego wysyłanie lub odbiór      informacji między członkami OZZIP, używanego w celach związanych ze      statutową działalnością OZZIP.\",\r\n  \" Uprawnionymi do zbierania i przetwarzania danych osobowych w wyżej wskazanym celu są członkow- ie Komisji Krajowej OZZIP, członkowie prezydiów podstawowych jednostek organizacyjnych związku albo przedstawiciele związku działający z upoważnienia wyżej wskazanych organów.\", \"OZZIP nie przekazuje pracodawcom lub innym podmiotom zatrudniającym zbiorczych list swoich członków. Jeżeli jednak pracodawca lub inny podmiot zatrudniający wystąpi z prośbą o przedstawienie informacji czy zamierzamy Ciebie reprezentować (np. w związku z zamiarem wypowiedzenia umowy) podejmiemy się Twojej obrony i niezwłocznie Cię o tym poinformujemy, korzystając z podanych przez Ciebie w tej deklaracji danych kontaktowych.\", \"Okres przetwarzania danych osobowych rozpocznie się od chwili doręczenia przedstawicielowi OZZIP niniejszego podpisanego oświadczenia i będzie trwał przez okres niezbędny do realizacji celów statutowych    OZZIP.\", \"Zgoda na przetwarzanie danych osobowych objętych deklaracją  przystąpienia do związku zawodowego OZZIP w zakresie imienia i nazwiska,      podmiotu zatrudniającego, podstawy zatrudnienia, długości zatrudnienia w odniesieniu do osoby wykonującej pracę zarobkową niebędącej pracownikiem w rozumieniu KP, oraz wymiaru czasu pracy (w odniesieniu do wszystkich wykonujących pracę zarobkową) jest warunkiem niezbędnym członkostwa w  OZZIP. Wycofanie zgody na ich przetwarzanie jest równoznaczne z wystąpieniem ze związku, niemniej nie powoduje ono zaprzestania przetwarzania tych danych w zakresie niezbędnym dla realizowania wymagań wynikających z przepisów prawa lub ochrony słusznych interesów administratora danych.\", \"W razie pytań prosimy o kontakt z Inspektorem Ochrony Danych Osobowych w OZZIP: Jarosław Urbański (tel: 663-633-504, email: rzecznikochronydanychosobowych@ozzip.pl).\", \" OZZIP będzie przetwarzać dane osobowe na  podstawie rozporządzenia Parlamentu Europejskiego i Rady (UE) 2016/679 z dnia 27 kwietnia 2016 r. w sprawie ochrony osób fizycznych w związku z przetwarzaniem danych osobowych i w sprawie swobodnego przepływu takich danych oraz uchylenia dyrektywy 95/46/WE.\", \"Każdej osobie, której dane osobowe są przetwarzane przez OZZIP przysługuje prawo do ich: weryfikacji, kontroli, aktualizacji, korekty, uzyskania informacji na temat metody, w jaki sposób są przechowywane, funkcji, a także odwołania od dalszego ich przetwarzania. W celu realizacji tych  uprawnień prosimy o kontakt na ipamazon@wp.pl, tel. 736-850-536.\", \"W momencie, gdy którakolwiek z podanych informacji zmieni się, prosimy o kontakt w celu uaktualnienia ewidencji. Dane osobowe będą pozyskiwane wyłącznie na podstawie niniejszej deklaracji oraz oświadczeń mających na celu zmianę lub korektę tych danych. Przekazanie danych osobowych w inny sposób będzie wymagało odrębnej zgody na ich przetwarzanie.\"\r\n];\r\n","import { FormHelperText } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../../context/ContextProv\";\r\nimport { dataClauseParagraphs } from \"./dataStepClause\";\r\n\r\nconst StepClause = () => {\r\n  const { formikClause } = useContext(StepsContext);\r\n\r\n  return (\r\n    <Card>\r\n      <Typography variant=\"body1\" sx={{ p: 1, fontWeight: \"bold\" }}>\r\n        KLAUZULA INFORMACYNA\r\n      </Typography>\r\n      {dataClauseParagraphs.map(paragraph => {\r\n        return (\r\n          <Typography key={paragraph} variant=\"body2\" sx={{ p: 0.5 }}>\r\n            {paragraph}\r\n          </Typography>\r\n        );\r\n      })}\r\n      <FormControlLabel\r\n        control={<Checkbox />}\r\n        name=\"confirmation\"\r\n        checked={formikClause.values.confirmation}\r\n        onChange={formikClause.handleChange}\r\n        label=\"Potwierdzam....\"\r\n      />\r\n      <Typography>\r\n        {formikClause.touched.confirmation &&\r\n          formikClause.errors.confirmation && (\r\n            <span style={{ color: \"red\" }}>\r\n              \r\n              {formikClause.errors.confirmation.toString()}\r\n            </span>\r\n          )}\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StepClause;\r\n","import { useState } from \"react\";\r\n\r\nconst useMultistepForm = (steps: JSX.Element[]) => {\r\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev >= steps.length - 1) return prev;\r\n      return prev + 1;\r\n    });\r\n  };\r\n\r\n  const back = () => {\r\n    setCurrentStepIdx(prev => {\r\n      if (prev <= 0) return prev;\r\n      return prev - 1;\r\n    });\r\n  };\r\n\r\n  return {\r\n    currentStepIdx,\r\n    setCurrentStepIdx,\r\n    step: steps[currentStepIdx],\r\n    steps,\r\n    isFirstStep: currentStepIdx === 0,\r\n    isLastStep: currentStepIdx === steps.length - 1,\r\n    next,\r\n    back,\r\n  };\r\n};\r\n\r\nexport default useMultistepForm;\r\n","import Container from \"@mui/material/Container\";\r\nimport { useContext } from \"react\";\r\nimport { StepsContext } from \"../../context/ContextProv\";\r\nimport StepDateInfo from \"./StepDateInfo\";\r\nimport StepSummary from \"./StepSummary\";\r\nimport StepsButtons from \"./StepsButtons\";\r\nimport StepsHeader from \"./StepsHeader\";\r\nimport StepForm from \"./stepForm/StepForm\";\r\nimport StepGeneralnfo from \"./stepClause/StepClause\";\r\nimport useMultistepForm from \"./useMultistepForm\";\r\n\r\nconst IndexSteps = () => {\r\n  const { formik, formikClause } = useContext(StepsContext);\r\n\r\n  const { steps, currentStepIdx, step, back, next } = useMultistepForm([\r\n    <StepForm />,\r\n    <StepGeneralnfo />,\r\n    <StepSummary />,\r\n    <StepDateInfo />,\r\n  ]);\r\n\r\nconst formSubmit = currentStepIdx === 0 ? formik.handleSubmit : formikClause.handleSubmit\r\n\r\n  return (\r\n    <main>\r\n      <Container>\r\n        <StepsHeader currentStepIdx={currentStepIdx} steps={steps} />\r\n        <form onSubmit={formSubmit} style={{ position: \"relative\" }}>\r\n          {step}\r\n          {currentStepIdx < 3 && (\r\n            <StepsButtons\r\n              next={next}\r\n              back={back}\r\n              currentStepIdx={currentStepIdx}\r\n              steps={steps}\r\n            />\r\n          )}\r\n        </form>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexSteps;\r\n"],"names":["ing","require","millenium","santander","alior","credit","mbank","pekao","pko","_jsx","ImageList","sx","display","flexWrap","maxWidth","children","img","link","alt","map","_ref","ImageListItem","border","width","Link","to","style","textDecoration","color","src","loading","marginInline","_jsxs","Card","Typography","variant","p","fontWeight","BanksList","_useContext","useContext","StepsContext","isLoading","error","Box","position","left","top","transform","zIndex","CircularProgress","_Fragment","formik","formikValues","Object","values","HttpRequestState","height","bgcolor","opacity","text","idx","UUID","props","formikClause","isSubmited","isConfirmed","sendRequest","_useState","useState","_useState2","_slicedToArray","responseStatus","setResponseStatus","isError","errors","isErrorInClause","useEffect","length","next","justifyContent","currentStepIdx","Button","onClick","back","url","body","member","method","marginLeft","type","steps","className","handleEmployerChange","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","handleChange","target","value","setErrors","employer","employerOther","validateForm","setFieldValue","stop","_x","apply","arguments","handleLoginChange","_ref2","_callee2","_context2","_x2","FormControl","FormLabel","id","RadioGroup","row","name","onChange","onBlur","handleBlur","FormControlLabel","control","Radio","label","TextField","size","touched","console","log","FormGroup","workplace","workplaceOther","handleEmployerOtherChange","contract","worktime","membership","Stack","FormHeader","StepFormTopInputs","StepFormEployer","StepInputsWorkplace","StepInputsConstract","StepInputsWorktime","StepInputsDepartment","StepInputsMembership","dataClauseParagraphs","paragraph","Checkbox","checked","confirmation","toString","setCurrentStepIdx","step","isFirstStep","isLastStep","_useMultistepForm","useMultistepForm","StepForm","StepGeneralnfo","StepSummary","StepDateInfo","formSubmit","handleSubmit","Container","StepsHeader","onSubmit","StepsButtons"],"sourceRoot":""}